// automatically generated by Xtext
grammar fr.unice.polytech.dsl.rythmml.Ryml with org.eclipse.xtext.common.Terminals

import "http://www.example.org/rythmml" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Music returns Music:
	'Music'
	name=EString
	':'
		('title:' title=EString)?
		('author:' author=EString)?
		('bpm:' bpm=EInt)?
		('resolution:' resolutionPerSlide=EInt)?
		(ownedNotes+=Note (ownedNotes+=Note)*)?
		(ownedBeats+=Beat (ownedBeats+=Beat)*)?
		(ownedBars+=Bar (ownedBars+=Bar)*)?
		(ownedPatterns+=Pattern (ownedPatterns+=Pattern)*)?
		(ownedSections+=Section (ownedSections+=Section)*)?
	;

EString returns ecore::EString:
	STRING | ID;

Section returns Section:
	'Section'
	name=EString
	':'
		patterns+=[Pattern|EString] ( "|" patterns+=[Pattern|EString])*;

EInt returns ecore::EInt:
	'-'? INT;

Pattern returns Pattern:
	'Pattern'
	name=EString
	':'
		bars+=BarMultiplier  ( "|" bars+=BarMultiplier)*;

BarMultiplier returns BarMultiplier:
	{BarMultiplier}
	bar=[Bar|EString] ('x' multiplier=EInt)?;

Operation returns Operation:
	(NoteAddition | NoteDeletion | NoteReplacement);

NoteAddition returns NoteAddition:
	('beat' beatNumber=EInt)? 'add' note=[Note|EString] 'at tick' division=EInt;

NoteDeletion returns NoteDeletion:
	('beat' beatNumber=EInt)? 'delete' note=[Note|EString];

NoteReplacement returns NoteReplacement:
	('beat' beatNumber=EInt)? 'replace' noteSrc=[Note|EString] 'by' newNote=[Note|EString];

Bar returns Bar:
	(ClassicalBar | ModifiedBar);

ClassicalBar returns ClassicalBar: 
	{ClassicalBar}
	'Bar' name=EString ':' beats+=[Beat|EString] ( "|" beats+=[Beat|EString])*;

ModifiedBar returns ModifiedBar:
	{ModifiedBar}
	'Bar' name=EString 'based on' bar=[Bar|EString]
	'modifications:'
	'-' operations+=Operation 
	( '-' operations+=Operation )*;

Beat returns Beat:
	'Beat' name=EString ':'
		('Nb of ticks :' totalDivNumber=EInt)?
		notes+=[Note|EString] ',' notePositions+=EInt ( "|" notes+=[Note|EString] ',' notePositions+=EInt)*;

Note returns Note:
	{Note}
	'Note' name=EString ':'(value=DrumNoteValue)?;

enum DrumNoteValue returns DrumNoteValue:
				SD = 'SD' | BD = 'BD' | CH = 'CH' | OH = 'OH' | CC = 'CC' 
				| RC = 'RC' | TM = 'TM' | TO = 'TO' | S = 'S' | WS = 'WS' | L = 'L';
